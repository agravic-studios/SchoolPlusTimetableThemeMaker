{"version":3,"sources":["logo.svg","components/FormBase.jsx","components/ColorForm.jsx","data/ThemeSet.jsx","components/TextForm.jsx","components/FormSide.jsx","components/Preview.jsx","components/PreviewSide.jsx","App.js","reportWebVitals.js","index.js"],"names":["React","Component","ColorForm","onChangeBackgroundColor","e","value","target","length","setState","backgroundColorInput","props","onChangeTextColor","textColorInput","ColorStateDisplay","styled","div","textColor","backgroundColor","state","console","log","this","defaultBackgroundColor","defaultTextColor","deletable","onDelete","className","join","label","type","autoComplete","placeholder","onChange","bind","defaultValue","onClick","ColorSet","primary","secondary","surface","series","ThemeSet","id","name","version","lightDivider","colorThemeTypes","backgroundColors","textColors","formKeys","solid","twotone","checked","subject","forms","section","items","key","getColorSetKey","FormSideContainer","FormSide","themeSet","onModifyThemeSet","useState","seriesBackgroundColors","setSeriesBackgroundColors","seriesTextColors","setSeriesTextColors","viewResult","setViewResult","json","setJson","map","i","item","bgColors","txColors","set","getFormDiv","index","tmp","filter","fValue","fIndex","style","padding","concat","jsonStr","JSON","stringify","link","document","createElement","download","blob","Blob","href","window","URL","createObjectURL","click","Cell","cellStyle","cellLightDivider","cell","color","daysOfWeek","cellData","getSubjectIndex","charCodeAt","getCellBackgroundTableData","colorThemeType","cells","row","rowIndex","colIndex","seriesLength","getSubjectBackgroundColor","getCellTextTableData","getSubjectTextColor","borderWidth","borderStyle","borderColor","width","height","textAlign","table","marginLeft","marginRight","borderSpacing","PreviewTable","cellBackgroundColors","cellTextColors","data","PreviewSideContainer","PreviewSideInner","PreviewSide","setColorThemeType","select","options","selectedIndex","Preview","AppContainer","App","setThemeSet","modifiedParts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.56c282b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass FormBase extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputValue: \"\",\n      submitValue: \"\",\n    };\n  }\n\n  onSubmitData = (e) => {\n    e.preventDefault();\n    const value = this.state.inputValue;\n    this.setState({\n      submitValue: value,\n    });\n\n    this.props.onSubmit && this.props.onSubmit(value);\n  };\n\n  onChangeInput = (e) => {\n    const value = e.target.value;\n    this.setState({\n      inputValue: value,\n    });\n\n    this.props.onSubmit && this.props.onSubmit(value);\n  };\n\n  /*\n   * =====================\n   *   Common Interfaces\n   * =====================\n   */\n\n  render() {\n    return null;\n  }\n}\n\nFormBase.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nexport default FormBase;\n","import React from \"react\";\nimport FormBase from \"./FormBase\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport \"../css/Forms.css\";\n\nclass ColorForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    onChangeBackgroundColor: PropTypes.func,\n    onChangeTextColor: PropTypes.func,\n    deletable: PropTypes.bool,\n    onDelete: PropTypes.func,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      backgroundColorInput: \"\",\n      textColorInput: \"\",\n    };\n  }\n\n  onChangeBackgroundColor = (e) => {\n    var value = e.target.value;\n    if (value.length == 1 && value != \"#\") {\n      value = \"#\" + value;\n    }\n    this.setState({\n      backgroundColorInput: value,\n    });\n    this.props.onChangeBackgroundColor &&\n      this.props.onChangeBackgroundColor(value);\n  };\n\n  onChangeTextColor = (e) => {\n    var value = e.target.value;\n    if (value.length == 1 && value != \"#\") {\n      value = \"#\" + value;\n    }\n    this.setState({\n      textColorInput: value,\n    });\n    this.props.onChangeTextColor && this.props.onChangeTextColor(value);\n  };\n\n  ColorStateDisplay = styled.div`\n    width: 96px;\n    height: 48px;\n    margin-right: 8px;\n    color: ${(props) => props.textColor || \"black\"};\n    background-color: ${(props) => props.backgroundColor || \"white\"};\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n    display: inline-block;\n    text-align: center;\n    line-height: 48px;\n  `;\n\n  render() {\n    console.log(\"Color Form Rendering...\");\n    const {\n      defaultBackgroundColor,\n      defaultTextColor,\n      deletable,\n      onDelete,\n    } = this.props;\n    const { backgroundColorInput, textColorInput } = this.state;\n    return (\n      <div className={[\"color-form\", this.props.className].join(\" \")}>\n        <this.ColorStateDisplay\n          backgroundColor={backgroundColorInput}\n          textColor={textColorInput}\n        >\n          {this.props.label}\n        </this.ColorStateDisplay>\n        <div className=\"inner-form\">\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Background\"\n            onChange={this.onChangeBackgroundColor.bind(this)}\n            defaultValue={defaultBackgroundColor}\n            value={backgroundColorInput}\n          />\n          <input\n            type=\"color\"\n            value={backgroundColorInput}\n            onChange={this.onChangeBackgroundColor.bind(this)}\n          />\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Text\"\n            onChange={this.onChangeTextColor.bind(this)}\n            defaultValue={defaultTextColor}\n            value={textColorInput}\n          />\n          <input\n            type=\"color\"\n            value={textColorInput}\n            onChange={this.onChangeTextColor.bind(this)}\n          />\n          {deletable && (\n            <button type=\"button\" onClick={onDelete}>\n              Delete\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nColorForm.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  onChangeBackgroundColor: PropTypes.func,\n  onChangeTextColor: PropTypes.func,\n};\n\nexport default ColorForm;\n","export class ColorSet {\n  primary: String = \"\";\n  secondary: String = \"\";\n  surface: String = \"\";\n  series = [];\n}\nexport class ThemeSet {\n  id: String = \"\";\n  name: String = \"\";\n  version: Int = 0;\n  lightDivider: Boolean = false;\n  colorThemeTypes = [];\n  backgroundColors: ColorSet = new ColorSet();\n  textColors: ColorSet = new ColorSet();\n}\n","import React from \"react\";\nimport FormBase from \"./FormBase\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nclass TextForm extends React.Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    onChangeBackgroundColor: PropTypes.func,\n    onChangeTextColor: PropTypes.func,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      backgroundColorInput: \"\",\n      backgroundColorSubmit: \"\",\n      textColorInput: \"\",\n      textColorSubmit: \"\",\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const bg = this.state.backgroundColorInput;\n    const tx = this.state.textColorInput;\n    this.setState({\n      backgroundColorSubmit: bg,\n      textColorSubmit: tx,\n    });\n\n    this.props.onSubmit && this.props.onSubmit(bg, tx);\n  };\n\n  onChangeBackgroundColor = (e) => {\n    var value = e.target.value;\n    this.setState({\n      backgroundColorInput: value,\n    });\n  };\n\n  onChangeTextColor = (e) => {\n    var value = e.target.value;\n    if (value.length == 1 && value != \"#\") {\n      value = \"#\" + value;\n    }\n    this.setState({\n      textColorInput: value,\n    });\n  };\n\n  ColorStateDisplay = styled.div`\n    width: 48px;\n    height: 48px;\n    margin-right: 8px;\n    color: ${(props) => props.textColor || \"black\"};\n    background-color: ${(props) => props.backgroundColor || \"white\"};\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);\n  `;\n\n  Container = styled.div`\n    display: flex !important;\n    flex-direction: row;\n    align-items: center;\n  `;\n\n  render() {\n    const {\n      backgroundColorInput,\n      backgroundColorSubmit,\n      textColorInput,\n      textColorSubmit,\n    } = this.state;\n    return (\n      <this.Container className={this.props.className}>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <label>\n            {this.props.label}:{\" \"}\n            <input\n              type={this.props.number ? \"number\" : \"text\"}\n              autoComplete=\"off\"\n              onChange={this.onChangeBackgroundColor.bind(this)}\n              value={backgroundColorInput}\n            />\n          </label>\n        </form>\n      </this.Container>\n    );\n  }\n}\n\nTextForm.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  number: PropTypes.bool,\n};\n\nexport default TextForm;\n","import React, { useState } from \"react\";\nimport ColorForm from \"./ColorForm\";\nimport styled from \"styled-components\";\n\nimport \"../css/FormSide.css\";\nimport TextForm from \"./TextForm\";\nimport { ThemeSet } from \"../data/ThemeSet\";\n\nconst formKeys = {\n  id: \"id\",\n  name: \"name\",\n  name_ko: \"name_ko\",\n  version: \"version\",\n\n  lightDivider: \"lightDivider\",\n\n  colorSurface: \"colorSurface\",\n  colorPrimary: \"colorPrimary\",\n  colorSecondary: \"colorSecondary\",\n\n  themeTypes: {\n    solid: \"solid\",\n    twotone: \"twotone\",\n    checked: \"checked\",\n    subject: \"subject\",\n  },\n};\n\nconst forms = [\n  {\n    section: \"Manifest\",\n    items: [\n      { label: \"ID\", type: \"text\", key: formKeys.id },\n      { label: \"Name (EN)\", type: \"text\", key: formKeys.name },\n      { label: \"Name (KO)\", type: \"text\", key: formKeys.name_ko },\n      { label: \"Version\", type: \"number\", key: formKeys.version },\n    ],\n  },\n\n  {\n    section: \"Theme Types\",\n    items: [\n      { label: \"Solid\", type: \"toggle\", key: formKeys.themeTypes.solid },\n      { label: \"Two Tone\", type: \"toggle\", key: formKeys.themeTypes.twotone },\n      {\n        label: \"Checked Pattern\",\n        type: \"toggle\",\n        key: formKeys.themeTypes.checked,\n      },\n      {\n        label: \"Various / Subjects\",\n        type: \"toggle\",\n        key: formKeys.themeTypes.subject,\n      },\n    ],\n  },\n\n  {\n    section: \"Basic Colors\",\n    items: [\n      {\n        label: \"Light Divider Color\",\n        type: \"toggle\",\n        key: formKeys.lightDivider,\n      },\n      { label: \"Primary\", type: \"basic-color\", key: formKeys.colorPrimary },\n      { label: \"Secondary\", type: \"basic-color\", key: formKeys.colorSecondary },\n      { label: \"Surface\", type: \"basic-color\", key: formKeys.colorSurface },\n    ],\n  },\n];\n\n/*var seriesColors = [\n  { backgroundColor: \"\", textColor: \"\" },\n  { backgroundColor: \"\", textColor: \"\" },\n  { backgroundColor: \"\", textColor: \"\" },\n  { backgroundColor: \"\", textColor: \"\" },\n];*/\n\nfunction getColorSetKey(key) {\n  switch (key) {\n    case formKeys.colorPrimary:\n      return \"primary\";\n      break;\n    case formKeys.colorSecondary:\n      return \"secondary\";\n      break;\n    case formKeys.colorSurface:\n      return \"surface\";\n      break;\n  }\n}\n\nfunction getFormDiv(item, themeSet, onModifyThemeSet) {\n  if (item.type == \"basic-color\") {\n    return (\n      <ColorForm\n        label={item.label}\n        onChangeBackgroundColor={(value) => {\n          var bgColors = { ...themeSet.backgroundColors };\n          bgColors[getColorSetKey(item.key)] = value;\n          onModifyThemeSet({\n            backgroundColors: bgColors,\n          });\n        }}\n        onChangeTextColor={(value) => {\n          var txColors = { ...themeSet.textColors };\n          txColors[getColorSetKey(item.key)] = value;\n          onModifyThemeSet({\n            textColors: txColors,\n          });\n        }}\n      />\n    );\n  } else if (item.type == \"toggle\") {\n    return (\n      <div>\n        <label>{item.label}</label>\n        <input\n          type=\"checkbox\"\n          name={item.key}\n          value=\"toggle\"\n          onChange={(e) => {\n            const checked = e.target.checked;\n            onModifyThemeSet({\n              lightDivider: checked,\n            });\n          }}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <label>{item.label}</label>\n        <input\n          type={item.type}\n          onChange={(e) => {\n            var set = {};\n            set[item.key] = e.target.value;\n            onModifyThemeSet(set);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nfunction FormSide({ themeSet, onModifyThemeSet }) {\n  const [seriesBackgroundColors, setSeriesBackgroundColors] = useState([]);\n  const [seriesTextColors, setSeriesTextColors] = useState([]);\n\n  const [viewResult, setViewResult] = useState(false);\n  const [json, setJson] = useState(\"\");\n\n  const onChangeInput = (key, value) => {\n    if (key == formKeys.colorPrimary) {\n    }\n  };\n\n  return (\n    <FormSideContainer>\n      <h1>Buddle Timetable Theme Maker</h1>\n      <form autoComplete=\"off\">\n        {forms.map((section) => (\n          <>\n            <h4>{section.section}</h4>\n            {section.items.map((i) =>\n              getFormDiv(i, themeSet, onModifyThemeSet.bind(this))\n            )}\n          </>\n        ))}\n\n        {/*<h4>Manifest</h4>\n\n        <div>\n          <label>ID</label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label>Name (EN)</label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label>Name (KO)</label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label>Version</label>\n          <input type=\"number\" />\n        </div>\n        <div>\n          <input type=\"checkbox\" name=\"divider-light\" value=\"light\" />\n          <label>Light Divider Color</label>\n        </div>\n\n        <h4>Basic Colors</h4>\n        <ColorForm label=\"Surface\" />\n        <ColorForm label=\"Primary\" />\n        <ColorForm label=\"Secondary\" />*/}\n\n        <h4>Series Colors</h4>\n        {seriesBackgroundColors.map((item, index) => (\n          <ColorForm\n            label={`Series #${index + 1}`}\n            onChangeBackgroundColor={(value) => {\n              var tmp = seriesBackgroundColors;\n              tmp[index] = value;\n              setSeriesBackgroundColors(tmp);\n            }}\n            onChangeTextColor={(value) => {\n              var tmp = seriesTextColors;\n              tmp[index] = value;\n              setSeriesTextColors(tmp);\n            }}\n            deletable\n            onDelete={() => {\n              setSeriesBackgroundColors(\n                seriesBackgroundColors.filter(\n                  (fValue, fIndex) => fIndex !== index\n                )\n              );\n              setSeriesTextColors(\n                seriesTextColors.filter((fValue, fIndex) => fIndex !== index)\n              );\n            }}\n            defaultBackgroundColor={seriesBackgroundColors[index]}\n            defaultTextColor={seriesTextColors[index]}\n          />\n        ))}\n        <button\n          type=\"button\"\n          style={{ padding: \"8px\" }}\n          onClick={() => {\n            setSeriesBackgroundColors(seriesBackgroundColors.concat(\"\"));\n            setSeriesTextColors(seriesTextColors.concat(\"\"));\n          }}\n        >\n          Add Series Color\n        </button>\n        <button\n          type=\"button\"\n          style={{ padding: \"8px\" }}\n          onClick={() => {\n            onModifyThemeSet({\n              backgroundColors: {\n                ...themeSet.backgroundColors,\n                series: seriesBackgroundColors,\n              },\n              textColors: {\n                ...themeSet.textColors,\n                series: seriesTextColors,\n              },\n            });\n          }}\n        >\n          Apply Series Colors\n        </button>\n      </form>\n\n      <hr />\n\n      <h5>Load</h5>\n      <input type=\"file\" style={{ padding: \"16px\" }} />\n\n      <h5>Save</h5>\n      <button\n        type=\"button\"\n        style={{ padding: \"16px\" }}\n        onClick={() => {\n          setViewResult(true);\n\n          const jsonStr = JSON.stringify(themeSet);\n          setJson(jsonStr);\n\n          var link = document.createElement(\"a\");\n          link.download = \"TimetableTheme_\" + themeSet.id + \".json\";\n          var blob = new Blob([jsonStr], { type: \"text/plain\" });\n          link.href = window.URL.createObjectURL(blob);\n          link.click();\n        }}\n      >\n        Save...\n      </button>\n\n      <hr />\n\n      {viewResult && <div style={{ padding: 8 }}>{json}</div>}\n    </FormSideContainer>\n  );\n}\n\nconst FormSideContainer = styled.div`\n  flex: 1;\n  max-height: 100vh;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  padding: 16px;\n  justify-items: center;\n  align-items: center;\n`;\n\nexport default FormSide;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Cell({ value, themeSet, backgroundColor, textColor }) {\n  var cellStyle = themeSet.lightDivider\n    ? { ...style.cellLightDivider }\n    : { ...style.cell };\n\n  cellStyle = {\n    ...cellStyle,\n    backgroundColor: backgroundColor,\n    color: textColor,\n  };\n  return <td style={cellStyle}>{value}</td>;\n}\n\nconst daysOfWeek = [\"월\", \"화\", \"수\", \"목\", \"금\"];\nconst cellData = [\n  [\"A\", \"B\", \"C\", \"A\", \"B\"],\n  [\"C\", \"E\", \"A\", \"D\", \"A\"],\n  [\"E\", \"A\", \"A\", \"E\", \"C\"],\n  [\"F\", \"B\", \"B\", \"D\", \"G\"],\n  [\"G\", \"F\", \"E\", \"A\", \"F\"],\n  [\"G\", \"H\", \"H\", \"F\", null],\n];\n\nfunction getSubjectIndex(value: String) {\n  if (value == null) return -1;\n\n  const charCode = value.charCodeAt(0);\n  const aCode = \"A\".charCodeAt(0);\n\n  const index = charCode - aCode;\n\n  return index;\n}\n\nfunction getSubjectBackgroundColor(themeSet, value: String) {\n  const index = getSubjectIndex(value);\n  if (index < 0) return themeSet.backgroundColors.surface;\n  const seriesLength = themeSet.backgroundColors.series.length;\n\n  return themeSet.backgroundColors.series[index % seriesLength];\n}\n\nfunction getSubjectTextColor(themeSet, value: String) {\n  const index = getSubjectIndex(value);\n  if (index < 0) return themeSet.textColors.surface;\n  const seriesLength = themeSet.textColors.series.length;\n\n  return themeSet.textColors.series[index % seriesLength];\n}\n\nfunction getCellBackgroundTableData(themeSet, colorThemeType, cells) {\n  if (colorThemeType == \"solid\") {\n    return cells.map((row) =>\n      row.map((item) => themeSet.backgroundColors.primary)\n    );\n  } else if (colorThemeType == \"twotone\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) =>\n        colIndex % 2 == 0\n          ? themeSet.backgroundColors.primary\n          : themeSet.backgroundColors.secondary\n      )\n    );\n  } else if (colorThemeType == \"checked\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) =>\n        (rowIndex + colIndex) % 2 == 0\n          ? themeSet.backgroundColors.primary\n          : themeSet.backgroundColors.secondary\n      )\n    );\n  } else if (colorThemeType == \"subject\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) => getSubjectBackgroundColor(themeSet, item))\n    );\n  }\n}\nfunction getCellTextTableData(themeSet, colorThemeType, cells) {\n  console.log(`Type: ${colorThemeType}`);\n  if (colorThemeType == \"solid\") {\n    return cells.map((row) => row.map((item) => themeSet.textColors.primary));\n  } else if (colorThemeType == \"twotone\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) =>\n        colIndex % 2 == 0\n          ? themeSet.textColors.primary\n          : themeSet.textColors.secondary\n      )\n    );\n  } else if (colorThemeType == \"checked\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) =>\n        (rowIndex + colIndex) % 2 == 0\n          ? themeSet.textColors.primary\n          : themeSet.textColors.secondary\n      )\n    );\n  } else if (colorThemeType == \"subject\") {\n    return cells.map((row, rowIndex) =>\n      row.map((item, colIndex) => getSubjectTextColor(themeSet, item))\n    );\n  }\n}\n\nfunction PreviewTable({ themeSet, colorThemeType }) {\n  const cellBackgroundColors = getCellBackgroundTableData(\n    themeSet,\n    colorThemeType,\n    cellData\n  );\n  const cellTextColors = getCellTextTableData(\n    themeSet,\n    colorThemeType,\n    cellData\n  );\n\n  console.log(\"BG: \" + cellBackgroundColors);\n  console.log(\"TX: \" + cellTextColors);\n\n  return (\n    <table style={style.table}>\n      <th></th>\n      {daysOfWeek.map((value) => (\n        <th>{value}</th>\n      ))}\n\n      {cellData.map((row, rowIndex) => (\n        <tr>\n          <td>{rowIndex + 1}</td>\n          {row.map((data, colIndex) => (\n            <Cell\n              value={data}\n              themeSet={themeSet}\n              backgroundColor={cellBackgroundColors[rowIndex][colIndex]}\n              textColor={cellTextColors[rowIndex][colIndex]}\n            />\n          ))}\n        </tr>\n      ))}\n    </table>\n  );\n}\n\nconst style = {\n  cell: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"rgba(0,0,0, .2)\",\n    width: \"48px\",\n    height: \"48px\",\n    textAlign: \"center\",\n  },\n  cellLightDivider: {\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: \"rgba(255, 255, 255, .5)\",\n    width: \"48px\",\n    height: \"48px\",\n    textAlign: \"center\",\n  },\n  table: {\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderSpacing: 0,\n  },\n};\n\nexport default PreviewTable;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PreviewTable from \"./Preview\";\n\nfunction PreviewSide({ themeSet }) {\n  const [colorThemeType, setColorThemeType] = useState(\"solid\");\n\n  return (\n    <PreviewSideContainer>\n      <PreviewSideInner>\n        <select\n          name=\"colorThemeType\"\n          onChange={(e) => {\n            const select = e.target;\n            const value = select.options[select.selectedIndex].value;\n            setColorThemeType(value);\n          }}\n        >\n          <option value=\"solid\">Solid</option>\n          <option value=\"twotone\">Two Tone</option>\n          <option value=\"checked\">Checked Pattern</option>\n          <option value=\"subject\">Various Colors (Subject)</option>\n        </select>\n        <PreviewTable themeSet={themeSet} colorThemeType={colorThemeType} />\n      </PreviewSideInner>\n    </PreviewSideContainer>\n  );\n}\n\nconst PreviewSideContainer = styled.div`\n  display: flex;\n  flex: 1;\n  height: 100vh;\n  border-right: 1px solid rgba(0, 0, 0, 0.2);\n  align-items: center;\n  justify-items: center;\n`;\n\nconst PreviewSideInner = styled.div`\n  text-align: center;\n  margin: 0 auto;\n`;\n\nexport default PreviewSide;\n","import logo from \"./logo.svg\";\nimport FormSide from \"./components/FormSide\";\nimport PreviewSide from \"./components/PreviewSide\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { ThemeSet, ColorSet } from \"./data/ThemeSet\";\n\nfunction App() {\n  const [themeSet, setThemeSet] = useState(new ThemeSet());\n\n  const onModifyThemeSet = (modifiedParts) => {\n    setThemeSet({\n      ...themeSet,\n      ...modifiedParts,\n    });\n  };\n\n  return (\n    <AppContainer>\n      <PreviewSide themeSet={themeSet} onModifyThemeSet={onModifyThemeSet} />\n      <FormSide themeSet={themeSet} onModifyThemeSet={onModifyThemeSet} />\n    </AppContainer>\n  );\n}\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}